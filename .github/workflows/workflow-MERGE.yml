name: Build Gradle project
# PR 완료 후 MERGE시 빌드 후 도커 이미지 생성, 배포, swagger 업데이트
on:
  push:
    branches:
      - develop
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.ACTIONS_BUILD_SECRETS }}" > ./src/main/resources/application.properties

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run build with Gradle Wrapper
        run: ./gradlew build

      # Docker image 생성 및 dockerhub에 push
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: khchoo/team12-docker-hub
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.ORG_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKERHUB_PW }}

      # 서버에서 Docker compose 실행 (docker-compose.yml 파일이 서버에 있어야 함)
      # HOST_DEV = 퍼블릭 IPv4 DNS , USERNAME = ubuntu, KEY = pem 키 전체
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master # https://github.com/appleboy/ssh-action
        with:
          host: ${{ secrets.ORG_EC2_ADDRESS }}
          username: ${{ secrets.ORG_EC2_USERNAME }}
          key: ${{ secrets.ORG_EC2_PEMKEY }}
          port: 22
          script: |
            sudo usermod -aG docker $USER
            sudo docker image prune -f
            sudo docker ps
            sudo docker images
            sudo docker-compose down
            sudo docker rmi $(docker images -a -q)
            sudo docker ps
            sudo docker images
            sudo docker-compose up -d

      - name: Start App
        run: |
          nohup ./gradlew bootRun &
          sleep 60  # give some time for the app to start

      - name: Fetch Swagger Documentation (OAS 3)
        run: curl http://localhost:8080/v3/api-docs.yaml > api-docs.yaml

      - name: Commit OpenAPI YAML to Repo
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/innovationCamp/messenger-service.git
          git add api-docs.yaml
          git commit -m "Updated api-docs.yaml" || echo "No changes to commit"
          git push origin HEAD:documentation --force

          
