name: Code Review and Build
# develop PR시 gpt 코드 리뷰 생성 후 빌드까지 진행
# PR에서는 도커 이미지 생성 X
on:
  pull_request:
    branches:
      - develop
    types: [opened, synchronize]
# opened: 새로운 풀 리퀘스트가 열릴 때
# synchronize: 풀 리퀘스트가 변경되었을 때 (새로운 커밋이 푸시되었을 때)

permissions:
  contents: write
  pull-requests: write

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3

      - name: Code Review
        uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.ORG_GPT_API_KEY }}
          LANGUAGE: Korean

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.ACTIONS_BUILD_SECRETS }}" > ./src/main/resources/application.properties

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run build with Gradle Wrapper
        run: ./gradlew build

      # Docker image 생성 및 dockerhub에 push
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: khchoo/team12-docker-hub
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.ORG_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKERHUB_PW }}

      # 서버에서 Docker compose 실행 (docker-compose.yml 파일이 서버에 있어야 함)
      # HOST_DEV = 퍼블릭 IPv4 DNS , USERNAME = ubuntu, KEY = pem 키 전체
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master # https://github.com/appleboy/ssh-action
        with:
          host: ${{ secrets.ORG_EC2_ADDRESS }}
          username: ${{ secrets.ORG_EC2_USERNAME }}
          key: ${{ secrets.ORG_EC2_PEMKEY }}
          port: 22
          script: |
            sudo usermod -aG docker $USER
            newgrp docker
            sudo docker image prune -f
            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d  
